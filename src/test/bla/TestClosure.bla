SelfTest [
    testClosureRead [
        | x |.

        x := 10.

        [ x == 10 ] value assert.
    ].

    testClosureThis [
        ([ this add: 5 to: 6 ] value == 11) assert.
    ].

    testClosureWrite [
        | a b |.

        a := Light new.
        b := Light new.

        [ a turnOn ] value.

        a isOn assert.
        b isOff assert.
    ].

    testClosurePass [
        | closure value |.

        closure := this alpha.
        value := this beta: closure.

        (value == 10) assert.
    ].

    alpha [
        | x |.
        x := 10.
        [ x ]
    ].

    beta: cls [
        cls value.
    ].

    testClosureIncrementer [
        | a b |.
        a := this gamma.
        b := this gamma.

        (a value == 1) assert.
        (a value == 2) assert.
        (a value == 3) assert.

        (b value == 1) assert.
    ].

    gamma [
        | x |.
        x := 0.

        [ x := x + 1 ]
    ].
].

Light [
    | on |.

    isOn    [ nil != on ].
    isOff   [ nil == on ].

    turnOn  [ on := true ].
    turnOff [ on := nil ].

    asString [
        this isOn ifTrue: [ "On!" ] ifFalse: [ "Off." ]
    ].
].
